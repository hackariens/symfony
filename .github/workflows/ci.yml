name: Continuous Integration
on: [push]
jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::apps/$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install npm dependencies
        run: npm install
      - name: Validate composer.json
        run: make composer-validate-ci
      - name: Install Composer dependencies
        run: make composer-dev-ci
      - name: linter readme.md
        run: make linter-readme
      - name: Run PHP Code Sniffer
        run: make linter-phpcs-onlyerror-ci
      - name: Run PHP MD
        run: make linter-phpmd-ci
      - name: Run PHPMND
        run: make linter-phpmnd-ci
      - name: Test lancement bootstrap
        run: make encore-dev
      - name: Run twigcs
        run: make linter-twigcs-ci
      - name: Run phpstan
        run: make linter-phpstan-ci
      - name: Run Acceptance Tests
        run: make tests-behat-ci
      - name: Run Tests
        run: make tests-simple-phpunit-unit-integration-ci
  docker:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: 'Docker swarm init'
          run: docker swarm init --default-addr-pool 10.20.0.0/16
        - name: 'Create proxy network'
          run: make docker-create-network
        - name: 'Build containers'
          run: make docker-deploy
        - name: 'Make sleep'
          run: make sleep
        - name: 'Installation version PROD'
          run: make env-prod
        - name: 'Check running containers'
          run: make docker-ls
        - name: 'BDD MIGRATE'
          run: make bdd-migrate
        # - name: 'Run the fixtures'
        #   run: make bdd-fixtures
