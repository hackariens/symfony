name: Continuous Integration
on: [push]
jobs:
  environnement:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::apps/$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
  install:
    needs: environnement
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install npm dependencies
        run: npm install
      - name: Validate composer.json
        run: |
          cd apps
          composer validate
      - name: Install Composer dependencies
        run: |
          cd apps
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
  linter:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: linter readme.md
        run: make linter-readme
      - name: Run PHP Code Sniffer
        run: |
          cd apps
          php bin/phpcs src features/bootstrap tests --report=full --extensions=php --warning-severity=0
      - name: Run PHP MD
        run: |
          cd apps
          php bin/phpmd src,features/bootstrap,tests text phpmd.xml
      - name: Run PHPMND
        run: |
          cd apps
          php bin/phpmnd src,features/bootstrap,tests
      - name: Run twigcs
        run: |
          cd apps
          php git/twigcs templates
  bootstrap:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test lancement bootstrap
        run: npm run encore-dev
  tests:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Acceptance Tests
        run: |
          cd apps
          php bin/behat --config behat.yaml
      - name: Run Tests
        run: |
          cd apps
          php bin/simple-phpunit --testsuite unit,integration
  docker:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'Docker swarm init'
        run: docker swarm init --default-addr-pool 10.20.0.0/16
      - name: 'Create proxy network'
        run: make create-network
      - name: 'Show HELP'
        run: make help
      - name: 'Build containers'
        run: make deploy
      - name: 'Check running stack'
        run: docker stack ls
      - name: 'Make sleep'
        run: make sleep
      - name: 'Installation version PROD'
        run: make env-prod
      - name: 'Check running containers'
        run: docker service ls
      - name: 'BDD MIGRATE'
        run: make bdd-migrate
      - name: 'Run the fixtures'
        run: make bdd-fixtures
